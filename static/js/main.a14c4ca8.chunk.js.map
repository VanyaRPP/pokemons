{"version":3,"sources":["component/PokeLoader/stylePokeLoader.module.css","component/SelectorType/stylePokeTypeSelector.module.css","component/Heder/styleHeader.module.css","component/PokeList/stylePokeList.module.css","component/PokePage/stylePokePage.module.css","component/PokeLoader/PokeLoader.js","component/Heder/Header.js","component/Pagination/Pagination.js","component/pageContext.js","component/PokeInfoModal/PokeInfoModal.js","component/PokeCard/PokeCard.js","component/PokeList/PokeList.js","component/SelectorType/SelectorType.js","component/PokePage/PokePage.js","App.js","serviceWorker.js","index.js","component/PokeCard/stylePokeCard.module.css","component/Pagination/stylePagination.module.css","component/PokeInfoModal/stylePokeInfoModal.module.css"],"names":["module","exports","PokeLoader","className","s","wrapper","pokeball","Header","HEADER","pagination","gotoNextPage","gotoPrevPage","pageNumber","container","pDiv","type","shape","onClick","ArrowLeftOutlined","disabled","ArrowRightOutlined","React","createContext","PokeInfoModal","pName","pType","TYPE_COLORS","pImg","PokeHeight","PokeAbilities","PokeBaseStats","PokeStatsName","useState","visible","setvisible","width","title","onCancel","footer","content","imgAndStats","imgDiv","src","style","height","statsDiv","trailColor","strokeLinecap","percent","format","status","display","justifyContent","minWidth","flexDirection","map","psn","fontSize","margin","pbs","pot","background","color","padding","textAlign","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","unknown","shadow","PokeCard","p","PokeName","PokeUrl","PokeImg","setPokeImg","PokeID","setPokeID","PokeType","setPokeType","setPokeHeight","setPokeBaseStats","setPokeStatsName","setLoading","useEffect","axios","get","then","res","data","id","sprites","front_default","types","pt","name","stats","st","base_stat","stat","pokecard","render","pUrl","pID","CardHeader","idDiv","nameDiv","typeDiv","key","PokeList","Pokemons","search","grid","filter","includes","filteredName","SelectorType","ontypeClick","onclearTypeClick","Type","setType","results","Defolt","tName","url","PokePage","Panel","Collapse","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","setPokemons","Loading","setpageNumber","setSearch","TypeFiltre","setTypeFiltre","gotoAllPage","goto20Page","cancel","canselToken","CancelToken","c","next","previous","pokemon","placeholder","defaultValue","onSearch","value","onChange","e","target","borderRadius","border","header","UpCircleOutlined","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a14c4ca8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"stylePokeLoader_wrapper__2begc\",\"pokeball\":\"stylePokeLoader_pokeball__jmlCk\",\"frames\":\"stylePokeLoader_frames__1wjFv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"stylePokeTypeSelector_grid__3B5zx\",\"Defolt\":\"stylePokeTypeSelector_Defolt__20WLp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HEADER\":\"styleHeader_HEADER__1-W_Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"stylePokeList_grid__2zTsK\",\"Defolt\":\"stylePokeList_Defolt__3AuWy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"stylePokePage_grid__2xDVj\",\"Defolt\":\"stylePokePage_Defolt__2N7Dw\"};","import React from 'react'\r\nimport s from './stylePokeLoader.module.css'\r\n\r\nexport default function PokeLoader() {\r\n    return (\r\n        <div>\r\n            <div className={s.wrapper}>\r\n                <div className={s.pokeball}>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from \"./styleHeader.module.css\"\r\nimport PokeLoader from '../PokeLoader/PokeLoader'\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <div className={s.HEADER}>\r\n                <h1>\r\n                    PokeDex\r\n                </h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport s from './stylePagination.module.css'\r\nimport { Button } from 'antd'\r\nimport { ArrowRightOutlined, ArrowLeftOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\nexport default function pagination({ gotoNextPage, gotoPrevPage, pageNumber }) {\r\n\r\nreturn (\r\n    <div className={s.container}>\r\n        <div className={s.pDiv}>\r\n            {gotoPrevPage && <Button type=\"primary\" shape=\"circle\" onClick={gotoPrevPage}><ArrowLeftOutlined /></Button>}\r\n        </div>\r\n        <div className={s.pDiv}>\r\n            <Button disabled>\r\n                {pageNumber}\r\n            </Button>\r\n        </div>\r\n        <div className={s.pDiv}>\r\n            {gotoNextPage && <Button type=\"primary\"  shape=\"circle\" onClick={gotoNextPage}><ArrowRightOutlined /></Button>}\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n}","import React, {createContext} from 'react'\r\n\r\nexport const pageContext = React.createContext()","import React, { useState, useContext } from 'react';\r\nimport s from './stylePokeInfoModal.module.css'\r\nimport { Modal, Button, Typography, Progress } from 'antd';\r\nimport {Context} from '../pageContext'\r\n\r\nexport default function PokeInfoModal({ pName, pType, TYPE_COLORS, pImg, PokeAbilities, PokeHeight, PokeBaseStats, PokeStatsName}){\r\n  const [visible, setvisible] = useState(true)\r\n\r\nfunction handleCancel(){\r\n  setvisible(false)\r\n}\r\n    return (\r\n      \r\n      <>\r\n        <Modal\r\n          width={700}\r\n          title={pName}\r\n          visible={visible}\r\n\r\n          onCancel={handleCancel}\r\n          footer={null}\r\n        >\r\n          <div className={s.content}>\r\n            <div className={ s.imgAndStats }>\r\n              <div className={s.imgDiv}>\r\n                <img src={pImg} style={{height:`219px`}}/>\r\n              </div>\r\n              <div className={s.statsDiv}>\r\n                <div>\r\n                  <Progress\r\n                  trailColor='violet'\r\n                  strokeLinecap=\"square\" type=\"dashboard\"\r\n                  percent={PokeHeight*2} format={percent => `${PokeHeight/10} m`}\r\n                  status={\"normal\"}\r\n                  />\r\n                </div>\r\n                \r\n                <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                  <div style={{minWidth:'90px', display:'flex', flexDirection: 'column',justifyContent:'space-between' }}>\r\n                    {PokeStatsName.map(psn=>(\r\n                      <p style={{fontSize:'13px', margin:'0'}}>\r\n                        {psn}\r\n                      </p>\r\n                    ))\r\n                    }\r\n                  </div>\r\n                  <div>\r\n                  {PokeBaseStats.map(pbs=>(\r\n                  <Progress \r\n                    trailColor='violet'\r\n                    percent={pbs/2} format={percent => `${pbs}`}\r\n                    status={\"normal\"}\r\n                  />\r\n                  ))\r\n                  }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n            {pType.map(pot => (\r\n              <p style={{background: `#${TYPE_COLORS[pot]}`, color: `#fff`, padding:'5px', textAlign:'center', fontSize:'25px', margin:'0'}}>\r\n                {pot}\r\n              </p>\r\n            ))}\r\n            </div> \r\n          </div>\r\n        </Modal>\r\n      </>\r\n    );\r\n\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport s from './stylePokeCard.module.css'\r\nimport axios from 'axios'\r\nimport { Spin } from 'antd'\r\nimport PokeInfoModal from '../PokeInfoModal/PokeInfoModal';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport useModal from 'antd/lib/modal/useModal';\r\nimport { render } from '@testing-library/react';\r\nimport {Context} from '../pageContext'\r\n//import PokeLoader from '../PokeLoader/PokeLoader'\r\n\r\nconst TYPE_COLORS = {\r\n  bug: 'B1C12E',\r\n  dark: '4F3A2D',\r\n  dragon: '755EDF',\r\n  electric: 'FCBC17',\r\n  fairy: 'F4B1F4',\r\n  fighting: '823551D',\r\n  fire: 'E73B0C',\r\n  flying: 'A3B3F7',\r\n  ghost: '6060B2',\r\n  grass: '74C236',\r\n  ground: 'D3B357',\r\n  ice: 'A3E7FD',\r\n  normal: 'C8C4BC',\r\n  poison: '934594',\r\n  psychic: 'ED4882',\r\n  rock: 'B9A156',\r\n  steel: 'B5B5C3',\r\n\twater: '3295F6',\r\n\tunknown: '00BBCD',\r\n\tshadow: 'B8C0EA'\r\n};\r\n\r\nexport default function PokeCard({p}) {\r\n  \r\n  \r\n  const [PokeName, setPokeName] = useState(p)\r\n  const [PokeUrl, setPokeUrl] = useState('https://pokeapi.co/api/v2/pokemon/'+ PokeName)\r\n  const [PokeImg, setPokeImg] = useState(null)\r\n  const [PokeID, setPokeID] = useState()\r\n  const [PokeType, setPokeType] = useState([])\r\n  const [PokeAbilities, setPokeAbilities] = useState([])\r\n  const [PokeHeight, setPokeHeight] = useState()\r\n  const [PokeBaseStats, setPokeBaseStats] = useState([])\r\n  const [PokeStatsName, setPokeStatsName] = useState([])\r\n  const [Loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    let cancel\r\n    axios.get(PokeUrl)\r\n    .then(\r\n      res=>{\r\n        setLoading(false)\r\n        setPokeID(res.data.id)\r\n        setPokeImg(res.data.sprites.front_default)\r\n        setPokeHeight(res.data.height)\r\n        setPokeType(res.data.types.map(pt => pt.type.name))\r\n        setPokeBaseStats(res.data.stats.map(st=>st.base_stat))\r\n        setPokeStatsName(res.data.stats.map(st=>st.stat.name))\r\n      }\r\n    )\r\n  }, [PokeUrl])\r\n\r\n\r\n  return (\r\n\r\n\r\n    <div className={s.pokecard} onClick={\r\n      ()=>{\r\n      render(\r\n        <PokeInfoModal\r\n          TYPE_COLORS={TYPE_COLORS}\r\n          pName={PokeName}\r\n          pUrl={PokeUrl}\r\n          pType={PokeType}\r\n          pID={PokeID}\r\n          pImg={PokeImg}\r\n          PokeAbilities={PokeAbilities}\r\n          PokeHeight={PokeHeight}\r\n          PokeBaseStats={PokeBaseStats}\r\n          PokeStatsName={PokeStatsName}\r\n          />)}}>\r\n              \r\n          <div className={s.CardHeader}>\r\n            <div className={s.idDiv}>\r\n              <p>\r\n                {PokeID}\r\n              </p>\r\n            </div>\r\n            <div className={s.nameDiv}>\r\n              {PokeName}\r\n            </div>\r\n          </div>\r\n            <img src={PokeImg}/>\r\n              {PokeType.map(pot => (\r\n              <div className={s.typeDiv} key={pot}>\r\n                <p style={{color: `#${TYPE_COLORS[pot]}`}}>\r\n                  {pot}\r\n                </p>\r\n              </div>\r\n              ))}\r\n            </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PokeCard from '../PokeCard/PokeCard'\r\nimport s from './stylePokeList.module.css'\r\n\r\nexport const PokeList = ({Pokemons, search}) => {\r\n  return (\r\n    <div className={s.grid}>\r\n      {\r\n      Pokemons.filter(name => name.includes(search)).map(filteredName => (\r\n        <div key={filteredName}>\r\n          <PokeCard key={filteredName} p={filteredName}/>\r\n        </div>\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect,useState} from 'react'\r\nimport { Button } from 'antd'\r\nimport s from './stylePokeTypeSelector.module.css'\r\nimport axios from 'axios'\r\nimport { pageContext } from '../pageContext';\r\n\r\nconst TYPE_COLORS = {\r\n  bug: 'B1C12E',\r\n  dark: '4F3A2D',\r\n  dragon: '755EDF',\r\n  electric: 'FCBC17',\r\n  fairy: 'F4B1F4',\r\n  fighting: '823551D',\r\n  fire: 'E73B0C',\r\n  flying: 'A3B3F7',\r\n  ghost: '6060B2',\r\n  grass: '74C236',\r\n  ground: 'D3B357',\r\n  ice: 'A3E7FD',\r\n  normal: 'C8C4BC',\r\n  poison: '934594',\r\n  psychic: 'ED4882',\r\n  rock: 'B9A156',\r\n  steel: 'B5B5C3',\r\n\twater: '3295F6',\r\n\tunknown: '00BBCD',\r\n\tshadow: 'B8C0EA'\r\n};\r\n\r\nexport const SelectorType = ({ ontypeClick, onclearTypeClick }) => {\r\n\tconst allTyprURL='https://pokeapi.co/api/v2/type'\r\n\tconst [Type, setType] = useState([])\r\n\t\r\n\tuseEffect(() => {\r\n\t\taxios.get(allTyprURL)\r\n\t\t.then(\r\n\t\t\tres=>{\r\n\t\t\t\tsetType(res.data.results)\r\n\t\t\t}\r\n\t\t)\r\n\t}, [allTyprURL])\r\n\r\n\r\n\r\n\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Button\r\n\t\t\t\tclassName={s.Defolt}\r\n\t\t\t\tstyle={{\r\n\t\t\t\tcolor:`violet`\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={()=>(\r\n\t\t\t\t\tonclearTypeClick()\r\n\t\t\t\t)}\r\n\t\t\t\t>\r\n\t\t\t\t\t&times;\r\n\t\t\t\t</Button>\r\n\t\t\t\t{\r\n\t\t\t\t\tType.map(tName=>(\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName={s.Defolt}\r\n\t\t\t\t\t\tstyle={{background: `#${TYPE_COLORS[tName.name]}`,color:`violet`}}\r\n\t\t\t\t\t\tonClick={()=>(\r\n\t\t\t\t\t\t\tontypeClick(tName.url)\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{tName.name}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState, useEffect, useContext} from 'react'\r\nimport axios from 'axios'\r\nimport s from './stylePokePage.module.css'\r\nimport PokeLoader from '../PokeLoader/PokeLoader'\r\nimport Pagination from '../Pagination/Pagination'\r\nimport { Button, BackTop, Collapse, Input } from 'antd'\r\nimport { UpCircleOutlined } from '@ant-design/icons'\r\nimport Search from 'antd/lib/input/Search'\r\nimport { PokeList } from '../PokeList/PokeList'\r\nimport { SelectorType, TypeUrlCont } from '../SelectorType/SelectorType'\r\n\r\n\r\nexport default function PokePage(){\r\n\r\n  const { Panel } = Collapse;\r\n  const [currentPageUrl, setCurrentPageUrl] = useState(`https://pokeapi.co/api/v2/pokemon?offset=0&limit=20`)\r\n  const [nextPageUrl, setNextPageUrl] = useState(null)\r\n  const [prevPageUrl, setPrevPageUrl] = useState(null)\r\n  const [Pokemons, setPokemons] = useState([])\r\n  const [Loading, setLoading] = useState(true)\r\n  const [pageNumber, setpageNumber] = useState(1)\r\n  const [search, setSearch] = useState('')\r\n  const [TypeFiltre, setTypeFiltre] = useState(true)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    let cancel\r\n    axios.get(currentPageUrl, {\r\n      canselToken: new axios.CancelToken( c => cancel = c )})\r\n      .then(\r\n        res=>{\r\n          setLoading(false)\r\n          setNextPageUrl(res.data.next)\r\n          setPrevPageUrl(res.data.previous)\r\n          TypeFiltre?\r\n          setPokemons(res.data.results.map(p => p.name))\r\n          :setPokemons(res.data.pokemon.map(p => p.pokemon.name))\r\n        }\r\n      )\r\n      return () => cancel()\r\n  }, [currentPageUrl])\r\n\r\n  \r\n  function gotoNextPage() {\r\n    setCurrentPageUrl(nextPageUrl)\r\n    setpageNumber(pageNumber+1)\r\n  }\r\n  function gotoPrevPage() {\r\n    setCurrentPageUrl(prevPageUrl)\r\n    setpageNumber(pageNumber-1)\r\n  }\r\n  function gotoAllPage() {\r\n    setTypeFiltre(true)\r\n    setCurrentPageUrl(`https://pokeapi.co/api/v2/pokemon?offset=0&limit=1050`)\r\n    setpageNumber(1)\r\n  }\r\n  function goto10Page() {\r\n    setTypeFiltre(true)\r\n    setSearch('')\r\n    setCurrentPageUrl(`https://pokeapi.co/api/v2/pokemon?offset=0&limit=10`)\r\n    setpageNumber(1)\r\n  }\r\n  function goto20Page() {\r\n    setTypeFiltre(true)\r\n    setSearch('')\r\n    setCurrentPageUrl(`https://pokeapi.co/api/v2/pokemon?offset=0&limit=20`)\r\n    setpageNumber(1)\r\n  }\r\n  function goto50Page() {\r\n    setTypeFiltre(true)\r\n    setSearch('')\r\n    setCurrentPageUrl(`https://pokeapi.co/api/v2/pokemon?offset=0&limit=50`)\r\n    setpageNumber(1)\r\n  }\r\n  function ontypeClick(value){\r\n    setTypeFiltre(false)\r\n    setCurrentPageUrl(value)\r\n  }\r\n  function onclearTypeClick(){\r\n    setTypeFiltre(true)\r\n    goto20Page()\r\n\t}\r\n  if (Loading) return <PokeLoader/>\r\n    return (\r\n      <>\r\n        <Search\r\n          placeholder=\"Search Pokemon\"\r\n          defaultValue={\r\n            search!==''?search:null\r\n          }\r\n          onSearch={()=>(\r\n            search!==''?\r\n            gotoAllPage()\r\n            :\r\n            setCurrentPageUrl(currentPageUrl),\r\n            value => setSearch(value)\r\n          )\r\n          }\r\n          onChange={e =>(\r\n            setSearch(e.target.value),\r\n            search===''?\r\n            setCurrentPageUrl(currentPageUrl):gotoAllPage()\r\n          )}\r\n          className={s.Defolt}\r\n        />\r\n        <div>\r\n        <div>\r\n            <Collapse ghost style={{background:'grey', borderRadius:'20px',border:'2px solid violet',border:`none`}}>\r\n              <Panel\r\n              header=\"Select Poke Card In Store\"\r\n              key=\"1\"\r\n              className={s.Defolt}\r\n              >\r\n                <Button onClick={gotoAllPage} className={s.Defolt}>All</Button>\r\n                <Button onClick={goto10Page} className={s.Defolt}>10</Button>\r\n                <Button onClick={goto20Page} className={s.Defolt}>20</Button>\r\n                <Button onClick={goto50Page} className={s.Defolt}>50</Button>\r\n              </Panel>\r\n              <Panel\r\n              header=\"Select Poke Type\"\r\n              key=\"2\"\r\n              className={s.Defolt}\r\n              >\r\n                <SelectorType \r\n                ontypeClick={ ontypeClick } \r\n                onclearTypeClick={ onclearTypeClick }\r\n                //setTyprUrl={}\r\n                />\r\n              </Panel>\r\n            </Collapse>\r\n          </div>\r\n          <Pagination\r\n            gotoNextPage={nextPageUrl ? gotoNextPage : null}\r\n            gotoPrevPage={prevPageUrl ? gotoPrevPage : null}\r\n            pageNumber={pageNumber}\r\n          />\r\n        </div>\r\n        <PokeList \r\n          Pokemons={Pokemons}\r\n          search={search}\r\n        />\r\n        <Pagination\r\n          gotoNextPage={nextPageUrl ? gotoNextPage : null}\r\n          gotoPrevPage={prevPageUrl ? gotoPrevPage : null}\r\n          pageNumber={pageNumber}\r\n        />\r\n        <BackTop>\r\n          <UpCircleOutlined style={{fontSize:'45px',color:'violet'}}/>\r\n        </BackTop>\r\n      </>  \r\n    )\r\n  } ","import React, { useContext } from 'react';\r\nimport './App.css';\r\nimport Header from './component/Heder/Header';\r\nimport 'antd/dist/antd.css';\r\nimport PokePage from './component/PokePage/PokePage';\r\n\r\nfunction App() {\r\n  return (\r\n        <div className=\"App\">\r\n          <Header/>\r\n          <PokePage/>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokecard\":\"stylePokeCard_pokecard__1gsF4\",\"idDiv\":\"stylePokeCard_idDiv__22G6V\",\"CardHeader\":\"stylePokeCard_CardHeader__2_RJh\",\"nameDiv\":\"stylePokeCard_nameDiv__2z3VQ\",\"typeDiv\":\"stylePokeCard_typeDiv__2vAEt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"stylePagination_container__2lTaJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"stylePokeInfoModal_content__oXaKz\",\"imgAndStats\":\"stylePokeInfoModal_imgAndStats__S-v-3\",\"imgDiv\":\"stylePokeInfoModal_imgDiv__3_PkE\"};"],"sourceRoot":""}